#1
wc -l ../Data/E.coli.fasta ../Data/407228326.fasta ../Data/407228412.fasta

# EXPLANATION
# wc = word count
# -l = number of lines (-w is words, -c is characters, if no specification all 3 will be shown)
# filepath needs to leave current directory (Code) and go into Data directory where the files are
# can put multiple files separated by a space, will give individual numbers and a total

#2
tail -n +2 ../Data/E.coli.fasta

# EXPLANATION
# tail = shows the bottom of a file (opposite of 'head')
# -n = indicates to show by lines (rather than characters for example)
# numbers with a leading '+' indicate counting from the beginning of the file ('-' is from the end and is the default)
# therefore '+2' means show all lines starting from the second one, thereby cutting out the first line

#3
tail -n +2 ../Data/E.coli.fasta | wc -c

# EXPLANATION
# first part same as question 2 to ensure the first line not counted (as it's not part of the sequence)
# wc -c counts characters - will give length of sequence

#4
sed '1d' ../Data/E.coli.fasta | tr -d '\n' | grep -o -i 'ATGC' | wc -l

# EXPLANATION
# sed modifies files - 1 = first line, d = delete, it doesn't edit the actual file (need -i to do that)
# tr -d = delete, \n = new line
# grep finds strings, -o = prints only the matching part of the lines (-c doesn't work as only accounts for one ocurrence per line and have removed \n)
# wc -l = count the lines outputted by grep (each match is on a new line)

#5
sed '1d' ../Data/E.coli.fasta | tr -d '\n' > TruncatedE.coli.txt && 
echo -n 'scale=3; (' > Sum.txt && 
grep -o -i 'A' TruncatedE.coli.txt | wc -l >> Sum.txt && 
echo -n '+' >> Sum.txt && 
grep -o -i 'T' TruncatedE.coli.txt | wc -l >> Sum.txt && 
echo -n ')/(' >> Sum.txt && 
grep -o -i 'G' TruncatedE.coli.txt | wc -l >> Sum.txt &&
echo -n '+' >> Sum.txt && 
grep -o -i 'C' TruncatedE.coli.txt | wc -l >> Sum.txt && 
echo ')' >> Sum.txt &&
tr -d '\n' < Sum.txt > FinalSum.txt && echo "" >> FinalSum.txt &&
cat FinalSum.txt | bc

# EXPLANATION
# 1) Get rid of first line and newline characters so grep works correctly - save the truncated E.coli fasta in a new file
# 2) The echos and greps are there (and wc after grep - see Q4 for explanation) so that the file 'Sum.txt' will eventually read out "(numA + num T)/(numG + numC)". Lots of redirecting to Sum.txt to do this.
# Note that echo -n used: this stops the trailing \n when adding to Sum.txt, as bc (the calculator) won't be able to read the file if there's newline characters.
# Also note that as each grep is a new command (&& not | used) the filename needs to be put everytime.
# 3) 'scale=3;' put at the beginning so bc gives the answer to 3 decimal places
# 4) After the echos and greps, the newline characters need to be taken out, as although echo -n has been used, the wc still produces a trailing newline. tr -d used to do this.
# The output must be saved to a new file (hence > FinalSum.txt), as tr doesn't actually alter the file Sum.txt, it just prints out an altered version while leaving the actual file the same. 
# The output couldn't be redirected back to Sum.txt as '< Sum.txt > Sum.txt' breaks everything.
# 5) After all the newline characters have been removed, echo "" adds a newline character at the end (as without -n there's a trailing \n) as br doesn't work if there isn't \n at the end.
# 6) Finally, print out the file FinalSum.txt using cat, and pipe it to bc so it can calculate the answer.
